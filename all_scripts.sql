--Часть 1. Создание структуры. Определить самостоятельно типы данных для каждого поля(колонки). Самостоятельно определить что является primary key и foreign key.

CREATE DATABASE university;
CREATE SCHEMA schema_specializations;
DROP TABLE IF EXISTS faculty;

--1. Создать таблицу с факультетами: id, имя факультета, стоимость обучения
CREATE TABLE faculty (
     id int primary key,
	 name varchar(50),
	 cost numeric(8,2)
);

--2. Создать таблицу с курсами: id, номер курса, id факультета
CREATE TABLE course(
	id int primary key,
	int number,
	faculty_id int references faculty(id)
)
--3. Создать таблицу с учениками: id, имя, фамилия, отчество, бюджетник/частник, id курса
CREATE TABLE student (
	id int primary key,
	first_name varchar(30),
	last_name varchar(30),
	patronymic varchar(30),
	budget boolean,
	course_id int references course(id)
)


--========
--Часть 2. Заполнение данными:
1. Создать два факультета: Инженерный (30 000 за курс) , Экономический (49 000 за курс)
2. Создать 1 курс на Инженерном факультете: 1 курс
3. Создать 2 курса на экономическом факультете: 1, 4 курс
4. Создать 5 учеников:
Петров Петр Петрович, 1 курс инженерного факультета, бюджетник
Иванов Иван Иваныч, 1 курс инженерного факультета, частник
Михно Сергей Иваныч, 4 курс экономического факультета, бюджетник
Стоцкая Ирина Юрьевна, 4 курс экономического факультета, частник
Младич Настасья (без отчества), 1 курс экономического факультета, частник







Часть 3. Выборка данных. Необходимо написать запросы, которые выведут экран:
1. Вывести всех студентов, кто платит больше 30_000.
2. Перевести всех студентов Петровых на 1 курс экономического факультета.
3. Вывести всех студентов без отчества или фамилии.
4. Вывести всех студентов содержащих в фамилии или в имени или в отчестве "ван". (пример name like '%Петр%' - найдет всех Петров, Петровичей, Петровых)
5. Удалить все записи из всех таблиц.